import { FFIType } from "bun:ffi";
const { ptr, cstring, i32 } = FFIType;

const iup_definitions = {
    // Functions
    IupOpen: { args: [i32, cstring], returns: i32, threadsafe: true },
    IupMessage: { args: [cstring, cstring], returns: i32, },
    IupMessageError: { args: [ptr, cstring], },
    IupSetGlobal: { args: [cstring, cstring], returns: i32, },
    IupMainLoop: { args: [], threadsafe: true },
    IupDialog: { args: [ptr], returns: ptr, },
    IupShow: { args: [ptr], returns: i32, threadsafe: true },
    IupShowXY: { args: [ptr, i32, i32], returns: i32, threadsafe: true },
    IupSetHandle: { args: [cstring, ptr], returns: ptr, },
    IupGetHandle: { args: [cstring], returns: ptr, },
    IupSetCallback: { args: [ptr, cstring, "callback"], returns: ptr, },
    IupSetStrAttribute: { args: [ptr, cstring, cstring] },
    IupSetAttribute: { args: [ptr, cstring, cstring] },
    IupGetAttribute: { args: [ptr, cstring], returns: cstring, },
    IupAppend: { args: [ptr, ptr], returns: ptr },
    IupMap: { args: [ptr], returns: i32 },
    IupLoadBuffer: { args: [cstring], returns: cstring },
    IupThread: { args: [], returns: ptr, },
    IupTimer: { args: [], returns: ptr, threadsafe: true },
    IupLoopStep: { args: [], returns: i32, threadsafe: true },
    IupSetFunction: { args: [cstring, "callback"], returns: ptr, },
    IupPopup: { args: [ptr, i32, i32], returns: i32, threadsafe: true },

    // Controls
    IupButton: { args: [cstring, cstring], returns: ptr, },
    IupText: { args: [cstring], returns: ptr, },
    IupLabel: { args: [cstring], returns: ptr, },
    IupList: { args: [cstring], returns: ptr, },
    IupDatePick: { args: [], returns: ptr, },
    IupGauge: { args: [], returns: ptr, },
    IupProgressBar: { args: [], returns: ptr, },
    IupSpin: { args: [], returns: ptr, },
    IupToggle: { args: [cstring, cstring], returns: ptr, },
    IupTree: { args: [], returns: ptr, },
    IupVal: { args: [cstring], returns: ptr, },
    IupFill: { args: [], returns: ptr, },
    IupSpace: { args: [], returns: ptr, },
    IupHbox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupVbox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupCbox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupGridBox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupMultiBox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupZbox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupRadio: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupNormalizer: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupFrame: { args: [ptr], returns: ptr, },
    IupTabs: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupBackgroundBox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupScrollBox: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupDetachBox: { args: [ptr], returns: ptr, },
    IupExpander: { args: [ptr], returns: ptr, },
    IupSbox: { args: [ptr], returns: ptr, },
    IupSplit: { args: [ptr, ptr], returns: ptr, },
    IupMenu: { args: [...Array(100).fill(ptr)], returns: ptr, },
    IupItem: { args: [cstring, cstring], returns: ptr, },
    IupSubmenu: { args: [cstring, ptr], returns: ptr, },
    IupSeparator: { args: [], returns: ptr, },

    // Dialogs
    IupFileDlg: { args: [], returns: ptr, },
    IupMessageDlg: { args: [], returns: ptr, },
    IupColorDlg: { args: [], returns: ptr, },
    IupFontDlg: { args: [], returns: ptr, },
    IupProgressDlg: { args: [], returns: ptr, },
}

export { iup_definitions };
